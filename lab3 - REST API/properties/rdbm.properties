# embedded derby jdbc properties
#jdbcDriver=org.apache.derby.jdbc.EmbeddedDriver
# this one has to be changed to point to a local directory on your system
#jdbcUrl=jdbc:derby:/Users/kevinagary/work/asu/classes/ser422/spring2016/code/ser422_spring2016/booktown/derby_home/booktowndb
jdbcDriver=com.mysql.jdbc.Driver
jdbcUrl=jdbc:mysql://localhost:3306/booktown?autoReconnect=true&useSSL=false
jdbcUser=root
jdbcPasswd=root
# We don't want SQL embedded in our code, so one technique is to externalize them from the code using a SQL Wrapping
# framework like iBatis, or to simply do it low-tech by putting the queries in this property file
sql.getAuthors=select id, last_name, first_name from Authors
sql.getAuthor=select id, last_name, first_name from Authors where id=?
sql.createAuthor=INSERT INTO Authors (last_name, first_name) VALUES (?,?)
sql.deleteAuthor=DELETE FROM Authors WHERE id = ?
sql.updateAuthor=UPDATE Authors set last_name=?, first_name=? WHERE id=?
sql.getBooks=select id, title, author_id, subject_id from Books
sql.getBook=select id, title, author_id, subject_id from Books where id=?
sql.createBook=INSERT INTO Books (title, author_id, subject_id) VALUES (?,?,?)
sql.deleteBook=DELETE FROM Books WHERE id = ?
sql.updateBook=UPDATE Books set title=?,author_id=?,subject_id=? WHERE id=?
sql.getSubjects=select id, subject, location from Subjects
sql.getSubject=select id, subject, location from Subjects where id=?
sql.createSubject=INSERT INTO Subjects (subject, location) VALUES (?,?)
sql.deleteSubject=DELETE FROM Subjects WHERE id = ?
sql.updateLocation=UPDATE Subjects set location=? WHERE id=?
sql.findAuthorOfBook=SELECT a.id, a.last_name, a.first_name from Authors a, Books b where a.id=b.author_id and b.id=?
sql.getAuthorBySubjectLocation=SELECT a.id, a.last_name, a.first_name from Authors a,Books b, Subjects s where b.subject_id=s.id and b.author_id=a.id and s.location like ?
sql.getBooksBySubject=SELECT b.id, b.title, b.author_id, b.subject_id from Books b, Subjects s where b.subject_id=s.id and s.id=?
sql.findBooksByAuthorID=select id, title, author_id, subject_id from Books where author_id=?
sql.findSubjectsByAuthorID = SELECT s.id, s.subject, s.location from Authors a,Books b, Subjects s where b.subject_id=s.id and b.author_id=a.id and a.id=?
sql.getAuthorsBySubject=SELECT a.id, a.last_name, a.first_name from Authors a,Books b, Subjects s where b.subject_id=s.id and b.author_id=a.id and s.id=?